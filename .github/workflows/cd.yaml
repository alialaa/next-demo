name: CD
on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.changesets.outputs.hasChangesets }}
    # permissions:
    #   id-token: write
    #   contents: write
    #   packages: write
    #   pull-requests: write
    #   issues: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Steup Node Environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
      - name: Install Dependencies
        run: npm ci

      - name: Create Release Pull Request or Github Release
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npx changeset tag
        env:
          GITHUB_TOKEN: ${{ secrets.CHANGESETS_TOKEN }}
      - run: |
          echo '${{ toJson(steps.changesets.outputs) }}'
          echo ${{ steps.changesets.outputs.published }}
          echo ${{ fromJson(steps.changesets.outputs.published) }}
      - name: Send GitHub Action trigger data to Slack workflow
        if: steps.changesets.outputs.pullRequestNumber
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "✅ *<https://github.com/${{github.repository}}/pull/${{ steps.changesets.outputs.pullRequestNumber }}|Version Pull Request>* was updated. Review it and merge it to create a new release and deployment."
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      - name: Set Release Version
        if: fromJson(steps.changesets.outputs.published)
        id: get-version
        run: echo "version=${{ fromJson(steps.changesets.outputs.publishedPackages)[0].version }}" >> $GITHUB_OUTPUT
      - name: Send GitHub Action trigger data to Slack workflow
        if: fromJson(steps.changesets.outputs.published)
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "⏳ *<https://github.com/${{github.repository}}/releases/tag/v${{ steps.get-version.outputs.version }}|Version ${{ steps.get-version.outputs.version }}>* Released! Deployment should be in progress."
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
  run-tests:
    needs: release
    if: fromJson(needs.release.outputs.should-deploy)
    secrets: inherit
    uses: ./.github/workflows/test.yaml
  deploy:
    needs: run-tests
    secrets: inherit
    uses: ./.github/workflows/deploy.yaml
    with:
      aws-env: "production"
      github-env: "production"

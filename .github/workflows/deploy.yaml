name: Deploy
on:
  workflow_dispatch:
    inputs: 
      aws-env:
        description: "AWS Elastic Beanstalk Environment"
        required: true
        default: "development"
        type: string
      github-env:
        description: "Github Environment"
        required: true
        default: "staging"
        type: environment

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  check-env:
    runs-on: ubuntu-latest
    outputs:
      get-env-name: ${{ steps.get-env-name.outputs.aws_env}}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - id: get-env-name
        run: echo "aws_env=$(aws elasticbeanstalk describe-environments --application-name nextjs-starter --environment-names ${{ inputs.aws-env }} --query "Environments[*].EnvironmentName" --output text)" >> $GITHUB_OUTPUT 
      - run: echo ${{steps.get-env-name.outputs.aws_env}}
  deploy:
    needs: check-env
    runs-on: ubuntu-latest
    if:  needs.check-env.outputs.get-env-name
    environment:
      name: ${{ inputs.github-env }}
      url: "http://${{ steps.get-cname.outputs.aws_env_cname }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Steup Node Environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
      - name: Install Dependencies
        run: npm ci

      - run: npm run build
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install EB CLI
        run: pip install awsebcli
      - name: Deploy
        # You can do something when a publish should happen.
        run: |
          eb init nextjs-starter --platform "Node.js 18 running on 64bit Amazon Linux 2" --region eu-west-2 
          eb deploy ${{ inputs.aws-env }}
      - name: Get deployment URL
        id: get-cname
        run: echo "aws_env_cname=$(aws elasticbeanstalk describe-environments --application-name nextjs-starter --environment-names ${{ inputs.aws-env }} --query "Environments[*].CNAME" --output text)" >> $GITHUB_OUTPUT 
      - run: echo ${{ steps.get-cname.outputs.aws_env_cname }} 
